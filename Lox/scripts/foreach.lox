var array = [0, 1, 2, 3, 4];

foreach(a in array) {
    print a;
}

// Desugars to this:
/*
// User-defined variables may not start with the character '@', so the '@loop' variable will not collide with existing variables.
for(var @loop_0 = 0; @loop_0 < len(array); @loop_0++) {
    var a = array[@loop_0];
    {
        print a;
    }
}

*/

foreach(char in "HELLO") {
    write(char + " "); //Prints "H E L L O" 
}

print "";

fun getArray() {
    return [1, 2, 3];
}

foreach(a in getArray()) {
    print a;
}


var nested = [["*"; 5]; 5];

foreach(inner in nested) {
    foreach(star in inner) {
        write("|" + star + "|");
    }
    print "";
}

var triple = [[[5;5]; 2]; 4];

foreach(outer in triple) {
    foreach(middle in outer) {
        foreach(inner in middle) {
            write(inner + " ");
        }
        print "";
    }
    print "";
}

foreach(inline in ["This", "is", "an", "array"]) {
    write(inline + " ");
}

print "";

class ArrayGetterClass {
    init() {
        this.nums = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0];
        this.strings = ["Hello", "foreach", "loops"];
        this.nested = [[random(100); 10]; 4];
    }

    getNums() {
        return this.nums;
    }

    getString() {
        return this.strings;
    }

    getNested() {
        return this.nested;
    }
}

var agc = ArrayGetterClass();

foreach(num in agc.getNums()) {
    print num;
}

var strings = agc.getString();
foreach(s in strings) {
    write(s + " ");
}
print "";

foreach(outer in agc.getNested()) {
    foreach(val in outer) {
        write(val + " ");
    }
    print "";
}


class A {
    init() {
        this.nums = [1, 0, 0, 1, 1, 0];
    }

    iter() {
        foreach(num in this.nums) {
            print num;
        }
    }
}

var a = A();
a.iter();