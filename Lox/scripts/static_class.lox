static class Math {
    static add(a, b) {
        return a + b;
    }

    static div(a, b) {
        return a / b;
    }

    static pow(base, exponent) {
        var b = base;
        for(var i = 1; i < exponent; i = i + 1) {
            b = b * b;
        }
        return b;
    }

    // Causes a compile-time (parsing-time?) error
    
    /*
    add(a, b) {
        return a + b;
    }
    */
}

print Math.add(5, 3);
print Math.div(10, 2);
print Math.div(10, 3);

print Math.pow(5, 3);

// This causes a runtime error
//var math = Math(); 

// Non-static classes still work.
class NonStatic {
    init(a, b) {
        this.a = a;
        this.b = b;
    }

    add() {
        return this.a + this.b;
    }

    div() {
        return this.a / this.b;
    }
}

var ns = NonStatic(10, 5);
print ns.add();
print ns.div();

class Derived < NonStatic {
    init(a, b, c) { 
        super.init(a, b);
        this.c = c;
    }

    addThree() {
        return super.add() + this.c;
    }
}

var d = Derived(10, 20, 30);
print d.addThree();
print d.add();
print d.div();